{"version":3,"sources":["api/index.ts","components/PostList/PostsList.tsx","pages/CreatePost/CreatePost.tsx","routes.tsx","pages/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","makeRequest","method","url","params","request","client","removePost","postId","getPosts","addPost","newPost","columns","field","headerName","width","PostsList","useState","posts","setPosts","useEffect","then","response","data","style","height","rows","pageSize","CreatePost","className","initialValues","title","body","validate","values","errors","onSubmit","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onChange","onBlur","value","disabled","length","routes","page","path","useStyles","makeStyles","background","drawer","drawerPaper","root","display","active","Layout","children","classes","history","useHistory","menuItems","text","icon","SubjectOutlined","color","AddCircleOutlineOutlined","Drawer","variant","anchor","paper","Typography","List","map","item","ListItem","button","onClick","push","ListItemIcon","ListItemText","primary","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431a3273.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\ntype Method = 'get' | 'post' | 'delete';\n\nconst makeRequest = (method:Method, url:string, params:{}) => {\n  return instance[method](`${url}`, params);\n};\n\nconst request = (method:Method, url:string) => {\n  return (params = {}) => makeRequest(method, url, params);\n};\n\nexport const client = {\n  removePost: (postId:number) => request('delete', `/posts/${postId}`)(),\n  getPosts: request('get', '/posts'),\n  addPost: (newPost: Post) => request('post', '/posts')(newPost),\n};\n","import React, { useEffect, useState, SetStateAction } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { AxiosResponse } from 'axios';\nimport { client } from '../../api';\n\nconst columns = [\n  { field: 'userId', headerName: 'UserID' },\n  { field: 'title', headerName: 'Title', width: 300 },\n  { field: 'body', headerName: 'Body', width: 600 },\n];\n\nexport const PostsList: React.FC = () => {\n  const [posts, setPosts] = useState([] as Post[]);\n\n  useEffect(() => {\n    client.getPosts()\n      .then((response: AxiosResponse<{}>) => setPosts(response.data as SetStateAction<Post[]>));\n  }, []);\n\n  return (\n    <div style={{ height: 840, width: '100%' }}>\n      <DataGrid\n        rows={posts}\n        columns={columns}\n        pageSize={14}\n      />\n    </div>\n  );\n};\n","import React, { SetStateAction, useState } from 'react';\nimport { Formik } from 'formik';\nimport { AxiosResponse } from 'axios';\nimport { client } from '../../api';\nimport '../../scss/CreatePost.scss';\n\ntype Values = {\n  title?: string,\n  body?: string,\n};\n\nexport const CreatePost: React.FC = () => {\n  const [posts, setPosts] = useState([] as Post[]);\n  const addNewPost = (newPost: Partial<Post>) => {\n    client.addPost(newPost as Post)\n      .then(() => client.getPosts())\n      .then((response: AxiosResponse<{}>) => setPosts(response.data as SetStateAction<Post[]>));\n  };\n\n  return (\n    <div className=\"create\">\n      <h1 className=\"create__title\">Create a post</h1>\n      <Formik\n        initialValues={{ title: '', body: '' }}\n        validate={values => {\n          const errors: Values = {};\n\n          if (!values.title) {\n            errors.title = 'Required';\n          }\n\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          addNewPost(values);\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"create__form\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.title}\n              className=\"create__input\"\n            />\n            {errors.title && touched.title && errors.title}\n            <input\n              type=\"text\"\n              name=\"body\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.body}\n              className=\"create__input\"\n            />\n            {errors.body && touched.body && errors.body}\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"create__button\"\n            >\n              Submit\n            </button>\n          </form>\n        )}\n      </Formik>\n      <h6>{posts.length}</h6>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PostsList } from './components/PostList';\nimport { CreatePost } from './pages/CreatePost';\n\nexport const routes = [\n  {\n    page: <PostsList />,\n    path: '/',\n  },\n  {\n    page: <CreatePost />,\n    path: '/create',\n  },\n];\n","import { makeStyles } from '@mui/styles';\nimport React from 'react';\nimport {\n  Drawer, Typography, List, ListItem, ListItemIcon, ListItemText,\n} from '@mui/material';\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@mui/icons-material';\nimport { useHistory } from 'react-router';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  page: {\n    background: '#f9f9f9',\n    width: '100%',\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  root: {\n    display: 'flex',\n  },\n  active: {\n    background: '#f4f4f4',\n  },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Layout: React.FC<Props> = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const menuItems = [\n    {\n      text: 'Posts',\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: '/',\n    },\n    {\n      text: 'Create Post',\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: '/create',\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\">\n            Menu\n          </Typography>\n        </div>\n\n        <List>\n          {menuItems.map(item => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <div className={classes.page}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { routes } from './routes';\nimport { Layout } from './pages/Layout';\n\nexport const App: React.FC = () => {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          {routes.map(item => (\n            <Route exact path={item.path} key={item.path}>\n              {item.page}\n            </Route>\n          ))}\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}